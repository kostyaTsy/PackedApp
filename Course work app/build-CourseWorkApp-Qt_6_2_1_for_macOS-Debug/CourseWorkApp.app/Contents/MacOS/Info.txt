The RLE algorithm is based on coding of repeated sequence of symbols/bytes. Packed code is [T|L], where T - type of sequence, L - length. We have two types of sequence: repeated (1) and not repeated (0). Maximum length of sequence is 255. The T and L merge into one number. High bit is a type of sequence, other bits - length of sequence. This algorithm is the most efficient in coding: (find types of files). 

The LZ77 algorithm is based on coding the identical sequences of symbols/bytes. Finding sequence is replaced to link ([P|L], where P - position of the first occurrence, L - length of this sequence). Then packed code splits into sequences of 8 bytes, this sequence is preceded by a number, that defines position of links. This algorithm is the most efficient in coding: (find types of files). Disadvantage is time. 

The Huffman algorithm is based on symbol frequency. The most frequently symbol gets the shortest code, the least frequently symbols gets the longest code. To define symbol codes, should be built the tree. Then should be built Huffman table from the tree, and the initial symbols changed to code from tree. This algorithm is the most efficient in coding: (find types of files).